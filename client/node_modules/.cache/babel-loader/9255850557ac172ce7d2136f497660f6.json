{"ast":null,"code":"import _classCallCheck from \"/Users/mehakvohra/Documents/Dev/Jamocha Media/client-cms-contentful/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mehakvohra/Documents/Dev/Jamocha Media/client-cms-contentful/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mehakvohra/Documents/Dev/Jamocha Media/client-cms-contentful/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mehakvohra/Documents/Dev/Jamocha Media/client-cms-contentful/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mehakvohra/Documents/Dev/Jamocha Media/client-cms-contentful/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mehakvohra/Documents/Dev/Jamocha Media/client-cms-contentful/client/src/app/routes/Clients.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ClientItem from \"../routes/Clients/ClientItem\";\nimport { client } from \"../../utils/client\";\nimport { areAuthItemsSet } from \"../../utils/Auth/Auth\";\n\nvar Clients =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clients, _React$Component);\n\n  function Clients() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Clients);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Clients)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      clients: [],\n      images: []\n    };\n    _this.client = client;\n\n    _this.fetchPosts = function () {\n      return _this.client.getEntries({\n        content_type: \"clientIdentifier\"\n      });\n    };\n\n    _this.setPosts = function (response) {\n      _this.setState({\n        clients: response.items\n      });\n    };\n\n    _this.fetchImages = function () {\n      return _this.client.getAssets();\n    };\n\n    _this.setImages = function (response) {\n      _this.setState({\n        images: response.items\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Clients, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPosts().then(this.setPosts);\n      this.fetchImages().then(this.setImages);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clients = this.state.clients;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, !areAuthItemsSet() ? React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Our Clients\"), clients.map(function (clients, i) {\n        return React.createElement(ClientItem, Object.assign({\n          key: i\n        }, clients, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Clients;\n}(React.Component);\n\nexport default Clients;","map":{"version":3,"sources":["/Users/mehakvohra/Documents/Dev/Jamocha Media/client-cms-contentful/client/src/app/routes/Clients.js"],"names":["React","Redirect","ClientItem","client","areAuthItemsSet","Clients","state","clients","images","fetchPosts","getEntries","content_type","setPosts","response","setState","items","fetchImages","getAssets","setImages","then","map","i","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,eAAT,QAAgC,uBAAhC;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,MAAM,EAAE;AAFF,K;UAKRL,M,GAASA,M;;UAOTM,U,GAAa;AAAA,aACX,MAAKN,MAAL,CAAYO,UAAZ,CAAuB;AACrBC,QAAAA,YAAY,EAAE;AADO,OAAvB,CADW;AAAA,K;;UAKbC,Q,GAAW,UAAAC,QAAQ,EAAI;AACrB,YAAKC,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAEM,QAAQ,CAACE;AADN,OAAd;AAGD,K;;UAGDC,W,GAAc;AAAA,aAAM,MAAKb,MAAL,CAAYc,SAAZ,EAAN;AAAA,K;;UAEdC,S,GAAY,UAAAL,QAAQ,EAAI;AACtB,YAAKC,QAAL,CAAc;AACZN,QAAAA,MAAM,EAAEK,QAAQ,CAACE;AADL,OAAd;AAGD,K;;;;;;;wCAvBmB;AAClB,WAAKN,UAAL,GAAkBU,IAAlB,CAAuB,KAAKP,QAA5B;AACA,WAAKI,WAAL,GAAmBG,IAAnB,CAAwB,KAAKD,SAA7B;AACD;;;6BAsBQ;AAAA,UACCX,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACH,eAAe,EAAhB,GACC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGG,OAAO,CAACa,GAAR,CAAY,UAACb,OAAD,EAAUc,CAAV;AAAA,eACX,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAEA;AAAjB,WAAwBd,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADW;AAAA,OAAZ,CAFH,CAJJ,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAeD;;;;EAlDmBP,KAAK,CAACsB,S;;AAqD5B,eAAejB,OAAf","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport ClientItem from \"../routes/Clients/ClientItem\";\n\nimport { client } from \"../../utils/client\";\nimport { areAuthItemsSet } from \"../../utils/Auth/Auth\";\n\nclass Clients extends React.Component {\n  state = {\n    clients: [],\n    images: []\n  };\n\n  client = client;\n\n  componentDidMount() {\n    this.fetchPosts().then(this.setPosts);\n    this.fetchImages().then(this.setImages);\n  }\n\n  fetchPosts = () =>\n    this.client.getEntries({\n      content_type: \"clientIdentifier\"\n    });\n\n  setPosts = response => {\n    this.setState({\n      clients: response.items\n    });\n  };\n\n  //Fetch all client profile images\n  fetchImages = () => this.client.getAssets();\n\n  setImages = response => {\n    this.setState({\n      images: response.items\n    });\n  };\n\n  render() {\n    const { clients } = this.state;\n    return (\n      <div>\n        {!areAuthItemsSet() ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <div>\n            <p>Our Clients</p>\n            {clients.map((clients, i) => (\n              <ClientItem key={i} {...clients} />\n            ))}\n          </div>\n        )}\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default Clients;\n"]},"metadata":{},"sourceType":"module"}