{"ast":null,"code":"import Auth0 from \"auth0-js\";\nimport config from \"./config\";\nimport localConfig from \"./localConfig\"; // import hostedConfig from \"./hostedConfig\";\n\nvar requestedScopes = \"openid profile\";\nvar auth0Client = new Auth0.WebAuth({\n  domain: config.auth0.domain,\n  clientID: config.auth0.client,\n  redirectUri: config.auth0.redirectUri,\n  audience: config.auth0.audience,\n  responseType: \"token id_token\",\n  scope: requestedScopes\n}); //Handles Login\n\nexport function ssoLogin(email, history) {\n  auth0Client.passwordlessStart({\n    connection: \"email\",\n    send: \"link\",\n    email: email\n  }, function (err, res) {\n    console.log(err);\n    if (err) throw new Error(\"User could not be sent sign on link error: \".concat(err));\n    var email = res.email,\n        emailVerified = res.emailVerified,\n        Id = res.Id;\n\n    if (email && Id) {\n      if (!emailVerified) {\n        history.push(\"/verify\");\n        return true;\n      }\n\n      if (userHasScopes([\"admin:all\"])) {\n        history.push(\"/admin\");\n        return true;\n      }\n\n      if (userHasScopes([\"role:editor\"])) {\n        console.log(res.scope);\n        history.push(\"/editor\");\n        return true;\n      }\n\n      console.log(res.scope);\n      history.push(\"/\");\n      return true;\n    }\n\n    throw new Error(\"No user was returned\");\n  });\n} //Sets access and id tokens = handleAuthentication();\n\nexport function setAuthItems(callback) {\n  auth0Client.parseHash({}, function (err, result) {\n    if (err) {\n      console.log(err);\n      callback(err, null);\n      return;\n    }\n\n    setSession(result);\n    callback(null, result);\n  });\n  console.log(\"grabbed auth tokens\");\n}\nexport function getAccessToken() {\n  var accessToken = localStorage.getItem(\"accessToken\");\n\n  if (accessToken) {\n    return accessToken;\n  }\n\n  console.log(\"set access token\");\n}\nexport function getIdToken() {\n  var idToken = localStorage.getItem(\"idToken\");\n\n  if (idToken) {\n    return idToken;\n  }\n\n  console.log(\"got id token\");\n}\nexport function setSession(result) {\n  //Set isLoggedIn flag in localStorage\n  localStorage.setItem(\"isLoggedIn\", \"true\");\n  var accessToken = result.accessToken,\n      idToken = result.idToken;\n  localStorage.setItem(\"idToken\", idToken);\n  localStorage.setItem(\"accessToken\", accessToken);\n  var scopes = result.scope || requestedScopes || \"\";\n  localStorage.setItem(\"scopes\", scopes);\n  console.log(\"scopes: \" + scopes);\n  console.log(\"set session\");\n  console.log(result.scope);\n  console.log(result);\n}\nexport function userHasScopes(scopes) {\n  var localScopes = localStorage.getItem(\"scopes\");\n\n  if (localScopes) {\n    var grantedScopes = localScopes.split(\" \");\n    return scopes.every(function (scope) {\n      return grantedScopes.includes(scope);\n    });\n  }\n\n  return false;\n}\nexport function getProfile(callback) {\n  var accessToken = localStorage.getItem(\"accessToken\");\n\n  if (accessToken) {\n    auth0Client.userinfo(accessToken, function (err, profile) {\n      if (profile) {\n        var userProfile = profile;\n        localStorage.setItem(\"userProfile\", userProfile);\n      }\n\n      callback(err, profile);\n    });\n  }\n} //TODO: RENEWSESSION FIX\n\nexport function renewSession() {\n  auth0Client.checkSession({}, function (err, result) {\n    if (err) {\n      console.log(err);\n      console.log(\"Could not get new user token\");\n      logout();\n    }\n\n    setSession(result);\n  });\n}\nexport function areAuthItemsSet() {\n  var idToken = localStorage.getItem(\"idToken\");\n  var accessToken = localStorage.getItem(\"accessToken\");\n\n  if (idToken && accessToken) {\n    return true;\n  }\n\n  return false;\n}\nexport function logout() {\n  auth0Client.logout({\n    returnTo: localConfig.urls.login,\n    // returnTo: hostedConfig.urls.login,\n    client_id: config.auth0.client\n  }); //Clear access and id token\n\n  localStorage.removeItem(\"idToken\");\n  localStorage.removeItem(\"accessToken\"); //Remove isLoggedIn flag from localStorage\n\n  localStorage.removeItem(\"isLoggedIn\"); //Remove isLoggedIn flag from localStorage\n\n  localStorage.removeItem(\"scopes\"); //Remove isLoggedIn flag from localStorage\n\n  localStorage.removeItem(\"userProfile\");\n  console.log(\"you are logged out\");\n}","map":{"version":3,"sources":["/Users/mehakvohra/Documents/Dev/Jamocha Media/client-cms-contentful/src/utils/Auth/Auth.js"],"names":["Auth0","config","localConfig","requestedScopes","auth0Client","WebAuth","domain","auth0","clientID","client","redirectUri","audience","responseType","scope","ssoLogin","email","history","passwordlessStart","connection","send","err","res","console","log","Error","emailVerified","Id","push","userHasScopes","setAuthItems","callback","parseHash","result","setSession","getAccessToken","accessToken","localStorage","getItem","getIdToken","idToken","setItem","scopes","localScopes","grantedScopes","split","every","includes","getProfile","userinfo","profile","userProfile","renewSession","checkSession","logout","areAuthItemsSet","returnTo","urls","login","client_id","removeItem"],"mappings":"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","sourcesContent":["import Auth0 from \"auth0-js\";\nimport config from \"./config\";\nimport localConfig from \"./localConfig\";\n// import hostedConfig from \"./hostedConfig\";\n\nconst requestedScopes = \"openid profile\";\n\nconst auth0Client = new Auth0.WebAuth({\n  domain: config.auth0.domain,\n  clientID: config.auth0.client,\n  redirectUri: config.auth0.redirectUri,\n  audience: config.auth0.audience,\n  responseType: \"token id_token\",\n  scope: requestedScopes\n});\n\n//Handles Login\nexport function ssoLogin(email, history) {\n  auth0Client.passwordlessStart(\n    {\n      connection: \"email\",\n      send: \"link\",\n      email\n    },\n    (err, res) => {\n      console.log(err);\n      if (err)\n        throw new Error(`User could not be sent sign on link error: ${err}`);\n\n      const { email, emailVerified, Id } = res;\n      if (email && Id) {\n        if (!emailVerified) {\n          history.push(\"/verify\");\n          return true;\n        }\n        if (userHasScopes([\"admin:all\"])) {\n          history.push(\"/admin\");\n          return true;\n        }\n        if (userHasScopes([\"role:editor\"])) {\n          console.log(res.scope);\n          history.push(\"/editor\");\n          return true;\n        }\n        console.log(res.scope);\n        history.push(\"/\");\n        return true;\n      }\n      throw new Error(\"No user was returned\");\n    }\n  );\n}\n\n//Sets access and id tokens = handleAuthentication();\nexport function setAuthItems(callback) {\n  auth0Client.parseHash({}, (err, result) => {\n    if (err) {\n      console.log(err);\n      callback(err, null);\n      return;\n    }\n    setSession(result);\n    callback(null, result);\n  });\n  console.log(\"grabbed auth tokens\");\n}\n\nexport function getAccessToken() {\n  const accessToken = localStorage.getItem(\"accessToken\");\n  if (accessToken) {\n    return accessToken;\n  }\n  console.log(\"set access token\");\n}\n\nexport function getIdToken() {\n  const idToken = localStorage.getItem(\"idToken\");\n  if (idToken) {\n    return idToken;\n  }\n  console.log(\"got id token\");\n}\n\nexport function setSession(result) {\n  //Set isLoggedIn flag in localStorage\n  localStorage.setItem(\"isLoggedIn\", \"true\");\n\n  const { accessToken, idToken } = result;\n  localStorage.setItem(\"idToken\", idToken);\n  localStorage.setItem(\"accessToken\", accessToken);\n\n  const scopes = result.scope || requestedScopes || \"\";\n  localStorage.setItem(\"scopes\", scopes);\n  console.log(\"scopes: \" + scopes);\n\n  console.log(\"set session\");\n  console.log(result.scope);\n  console.log(result);\n}\n\nexport function userHasScopes(scopes) {\n  const localScopes = localStorage.getItem(\"scopes\");\n  if (localScopes) {\n    const grantedScopes = localScopes.split(\" \");\n    return scopes.every(scope => grantedScopes.includes(scope));\n  }\n  return false;\n}\n\nexport function getProfile(callback) {\n  const accessToken = localStorage.getItem(\"accessToken\");\n  if (accessToken) {\n    auth0Client.userinfo(accessToken, (err, profile) => {\n      if (profile) {\n        const userProfile = profile;\n        localStorage.setItem(\"userProfile\", userProfile);\n      }\n      callback(err, profile);\n    });\n  }\n}\n\n//TODO: RENEWSESSION FIX\nexport function renewSession() {\n  auth0Client.checkSession({}, (err, result) => {\n    if (err) {\n      console.log(err);\n      console.log(\"Could not get new user token\");\n      logout();\n    }\n    setSession(result);\n  });\n}\n\nexport function areAuthItemsSet() {\n  const idToken = localStorage.getItem(\"idToken\");\n  const accessToken = localStorage.getItem(\"accessToken\");\n\n  if (idToken && accessToken) {\n    return true;\n  }\n  return false;\n}\n\nexport function logout() {\n  auth0Client.logout({\n    returnTo: localConfig.urls.login,\n    // returnTo: hostedConfig.urls.login,\n    client_id: config.auth0.client\n  });\n\n  //Clear access and id token\n  localStorage.removeItem(\"idToken\");\n  localStorage.removeItem(\"accessToken\");\n\n  //Remove isLoggedIn flag from localStorage\n  localStorage.removeItem(\"isLoggedIn\");\n\n  //Remove isLoggedIn flag from localStorage\n  localStorage.removeItem(\"scopes\");\n\n  //Remove isLoggedIn flag from localStorage\n  localStorage.removeItem(\"userProfile\");\n\n  console.log(\"you are logged out\");\n}\n"]},"metadata":{},"sourceType":"module"}